#!/usr/bin/env python3
"""
GarageReg Demo Scenario - Simplified Data Generator

Creates demo data compatible with the current database structure:
- 1 Client organization
- 2 Sites  
- 3 Buildings
- 10 Gates
- 2 Inspection templates
- Sample inspection data
- Ticket ‚Üí Work Order flow

Simplified demo adat gener√°tor a jelenlegi adatb√°zis strukt√∫r√°hoz.
"""

import json
import uuid
from datetime import datetime, timedelta
from pathlib import Path


def create_demo_scenario_data():
    """Create comprehensive demo data for the Golden Path scenario."""
    
    print("üéØ GarageReg Demo Scenario - Simplified Data Generation")
    print("=" * 60)
    
    demo_data = {}
    
    # 1. Organization/Client Data
    print("\n1Ô∏è‚É£ Creating client organization data...")
    demo_data['client'] = {
        "id": 1,
        "name": "TechPark Business Center Kft.",
        "display_name": "TechPark Business Center",
        "address": "1117 Budapest, InfoPark s√©t√°ny 1.",
        "tax_number": "12345678-2-41", 
        "registration_number": "01-09-876543",
        "contact_person": "Kov√°cs L√°szl√≥",
        "contact_phone": "+36 1 999 8877",
        "contact_email": "kovacs.laszlo@techpark.hu",
        "is_active": True
    }
    
    # 2. Sites Data
    print("2Ô∏è‚É£ Creating sites data...")
    demo_data['sites'] = [
        {
            "id": 1,
            "client_id": 1,
            "name": "TechPark √âszaki Campus",
            "display_name": "√âszaki Campus",
            "address": "1117 Budapest, InfoPark s√©t√°ny 1/A",
            "description": "Irodapark + gy√°rt√°s ter√ºlet (15,000 m¬≤)",
            "is_active": True
        },
        {
            "id": 2, 
            "client_id": 1,
            "name": "TechPark D√©li Campus",
            "display_name": "D√©li Campus", 
            "address": "1117 Budapest, InfoPark s√©t√°ny 1/B",
            "description": "Logisztikai k√∂zpont (8,500 m¬≤)",
            "is_active": True
        }
    ]
    
    # 3. Buildings Data
    print("3Ô∏è‚É£ Creating buildings data...")
    demo_data['buildings'] = [
        # North Campus buildings
        {
            "id": 1,
            "site_id": 1,
            "name": "Alfa √âp√ºlet",
            "display_name": "Alfa √âp√ºlet",
            "description": "4 szintes irodah√°z, 120 irodaegys√©g",
            "floor_count": 4,
            "total_area": 5000,
            "is_active": True
        },
        {
            "id": 2,
            "site_id": 1, 
            "name": "B√©ta √âp√ºlet",
            "display_name": "B√©ta √âp√ºlet",
            "description": "2 szintes gy√°rt√≥csarnok, 8 gy√°rt√≥egys√©g", 
            "floor_count": 2,
            "total_area": 3000,
            "is_active": True
        },
        # South Campus building
        {
            "id": 3,
            "site_id": 2,
            "name": "Gamma √âp√ºlet", 
            "display_name": "Gamma √âp√ºlet",
            "description": "1 szintes logisztikai csarnok, 25 rakt√°r√©gys√©g",
            "floor_count": 1,
            "total_area": 4000,
            "is_active": True
        }
    ]
    
    # 4. Gates Data (10 gates)
    print("4Ô∏è‚É£ Creating gates data...")
    demo_data['gates'] = [
        # Alfa Building gates (4)
        {
            "id": 1,
            "building_id": 1,
            "name": "F≈ëbej√°rat",
            "display_name": "Alfa F≈ëbej√°rat", 
            "gate_type": "automatic_door",
            "manufacturer": "KABA",
            "model": "ED-250",
            "serial_number": "KABA-ED250-001",
            "installation_date": "2024-01-15",
            "location_description": "F√∂ldszint, f≈ëbej√°rat",
            "is_active": True
        },
        {
            "id": 2,
            "building_id": 1,
            "name": "Parkol√≥h√°z bej√°rat",
            "display_name": "Alfa Parkol√≥",
            "gate_type": "barrier",
            "manufacturer": "CAME", 
            "model": "GARD-4000",
            "serial_number": "CAME-G4000-002",
            "installation_date": "2024-01-20",
            "location_description": "Parkol√≥h√°z bej√°rat",
            "is_active": True
        },
        {
            "id": 3,
            "building_id": 1,
            "name": "T≈±zjelz≈ë kij√°rat",
            "display_name": "Alfa T≈±zkij√°rat",
            "gate_type": "emergency_exit",
            "manufacturer": "DORMA",
            "model": "FIRE-EXIT-200", 
            "serial_number": "DORMA-FE200-003",
            "installation_date": "2024-01-25",
            "location_description": "√âszaki sz√°rny, t≈±zl√©pcs≈ëh√°z",
            "is_active": True
        },
        {
            "id": 4,
            "building_id": 1, 
            "name": "Szerviz bej√°rat",
            "display_name": "Alfa Szerviz",
            "gate_type": "manual_door",
            "manufacturer": "ABLOY",
            "model": "SEC-DOOR-150",
            "serial_number": "ABLOY-SD150-004", 
            "installation_date": "2024-02-01",
            "location_description": "H√°ts√≥ szerviz ter√ºlet",
            "is_active": True
        },
        
        # Beta Building gates (3)
        {
            "id": 5,
            "building_id": 2,
            "name": "Gy√°rt√≥csarnok f≈ëbej√°rat", 
            "display_name": "B√©ta Gy√°rt√≥csarnok",
            "gate_type": "sliding",
            "manufacturer": "CAME",
            "model": "BXV-4",
            "serial_number": "CAME-BXV4-005",
            "installation_date": "2024-02-05",
            "location_description": "Gy√°rt√≥csarnok bej√°rat", 
            "is_active": True
        },
        {
            "id": 6,
            "building_id": 2,
            "name": "Rakod√≥ kapu",
            "display_name": "B√©ta Rakod√≥",
            "gate_type": "sectional",
            "manufacturer": "H√ñRMANN", 
            "model": "SPU-F42",
            "serial_number": "HORM-SF42-006",
            "installation_date": "2024-02-10",
            "location_description": "Rakod√≥ ter√ºlet",
            "is_active": True
        },
        {
            "id": 7,
            "building_id": 2,
            "name": "V√©szhelyzeti kij√°rat",
            "display_name": "B√©ta V√©szkij√°rat", 
            "gate_type": "emergency_exit",
            "manufacturer": "PANIC",
            "model": "EMRG-300",
            "serial_number": "PANIC-E300-007",
            "installation_date": "2024-02-15",
            "location_description": "Gy√°rt√≥csarnok keleti oldal",
            "is_active": True
        },
        
        # Gamma Building gates (3)
        {
            "id": 8,
            "building_id": 3,
            "name": "Dokkol√≥ kapu #1",
            "display_name": "Gamma Dokkol√≥ 1",
            "gate_type": "industrial",
            "manufacturer": "H√ñRMANN",
            "model": "V-3015",
            "serial_number": "HORM-V3015-008", 
            "installation_date": "2024-02-20",
            "location_description": "1. dokkol√≥ √°ll√°s",
            "is_active": True
        },
        {
            "id": 9,
            "building_id": 3,
            "name": "Dokkol√≥ kapu #2",
            "display_name": "Gamma Dokkol√≥ 2", 
            "gate_type": "industrial",
            "manufacturer": "H√ñRMANN",
            "model": "V-3015",
            "serial_number": "HORM-V3015-009",
            "installation_date": "2024-02-25",
            "location_description": "2. dokkol√≥ √°ll√°s",
            "is_active": True
        },
        {
            "id": 10,
            "building_id": 3,
            "name": "Udvar kapu",
            "display_name": "Gamma Udvar",
            "gate_type": "swing",
            "manufacturer": "NICE",
            "model": "ROBO-1000",
            "serial_number": "NICE-R1000-010",
            "installation_date": "2024-03-01", 
            "location_description": "Udvar bej√°rat",
            "is_active": True
        }
    ]
    
    # 5. Users Data
    print("5Ô∏è‚É£ Creating users data...")
    demo_data['users'] = [
        {
            "id": 1,
            "username": "admin",
            "email": "admin@garagereg.demo",
            "display_name": "Demo Admin",
            "is_active": True
        },
        {
            "id": 2, 
            "username": "szabo.peter",
            "email": "szabo.peter@garagereg.demo",
            "display_name": "Szab√≥ P√©ter",
            "license_number": "ELL-2024-0156",
            "is_active": True
        },
        {
            "id": 3,
            "username": "nagy.anna", 
            "email": "nagy.anna@garagereg.demo",
            "display_name": "Nagy Anna",
            "license_number": "ELL-2024-0089",
            "is_active": True
        },
        {
            "id": 4,
            "username": "molnar.gabor",
            "email": "molnar.gabor@garagereg.demo",
            "display_name": "Moln√°r G√°bor", 
            "license_number": "TECH-2024-0234",
            "is_active": True
        }
    ]
    
    # 6. Inspection Templates
    print("6Ô∏è‚É£ Creating inspection templates...")
    demo_data['inspection_templates'] = [
        {
            "id": 1,
            "name": "Havi Biztons√°gi Ellen≈ërz√©s",
            "description": "Rendszeres havi biztons√°gi ellen≈ërz√©s √∂sszes kaput√≠pusra",
            "category": "safety",
            "estimated_duration": 30,
            "is_active": True,
            "checklist_items": [
                "Mechanikus m≈±k√∂d√©s ellen≈ërz√©se",
                "Biztons√°gi √©rz√©kel≈ëk tesztje", 
                "V√©szmeg√°ll√≠t√≥ funkcionalit√°s",
                "Vil√°g√≠t√°s √©s jelz√©sek",
                "T√∂m√≠t√©sek √©s kop√°si nyomok"
            ]
        },
        {
            "id": 2,
            "name": "Negyed√©ves Karbantart√°si Ellen≈ërz√©s", 
            "description": "R√©szletes karbantart√°si √©s m≈±szaki ellen≈ërz√©s",
            "category": "maintenance",
            "estimated_duration": 90,
            "is_active": True,
            "checklist_items": [
                "Motor √©s hajt√°sl√°nc ellen≈ërz√©s",
                "Elektromos rendszer diagnosztika",
                "H≈ëm√©rs√©klet m√©r√©sek",
                "Ken≈ëanyag √©s folyad√©k szintek", 
                "Kop√≥alkatr√©szek felm√©r√©se",
                "Kalibr√°ci√≥s be√°ll√≠t√°sok"
            ]
        }
    ]
    
    # 7. Demo Inspections
    print("7Ô∏è‚É£ Creating demo inspections...")
    demo_data['inspections'] = [
        {
            "id": 1,
            "gate_id": 1,  # Alfa f≈ëbej√°rat
            "template_id": 1,  # Safety template
            "inspector_id": 2,  # Szab√≥ P√©ter
            "title": "Havi Biztons√°gi Ellen≈ërz√©s - Alfa F≈ëbej√°rat",
            "scheduled_date": "2024-10-04T09:00:00",
            "actual_start": "2024-10-04T09:05:00",
            "actual_end": "2024-10-04T09:35:00",
            "status": "completed",
            "result": "minor_issue",
            "notes": "Kisebb hiba √©szlelve: kopott t√∂m√≠t√©s az ajt√≥keret alj√°n. M≈±k√∂d≈ëk√©pess√©g nem s√©r√ºl, de cser√©t javaslom a k√∂vetkez≈ë karbantart√°skor.",
            "checklist_results": {
                "mechanikus_mukodes": "OK",
                "biztonsagi_erzekelek": "OK", 
                "veszmegallito": "OK",
                "vilagitas": "OK",
                "tomitesek": "Kop√°s √©szlelhet≈ë"
            }
        },
        {
            "id": 2,
            "gate_id": 5,  # B√©ta gy√°rt√≥csarnok
            "template_id": 2,  # Maintenance template
            "inspector_id": 3,  # Nagy Anna
            "title": "Negyed√©ves Karbantart√°si Ellen≈ërz√©s - B√©ta Gy√°rt√≥csarnok",
            "scheduled_date": "2024-10-04T14:30:00", 
            "actual_start": "2024-10-04T14:35:00",
            "actual_end": "2024-10-04T16:15:00",
            "status": "completed",
            "result": "critical_issue", 
            "notes": "KRITIKUS HIBA: Motor t√∫lmeleged√©s √©szlelhet≈ë (78¬∞C normal √ºzemn√©l, max. 65¬∞C). A kapu lassabban reag√°l, id≈ënk√©nt 2-3 m√°sodpercre meg√°ll. Azonnali jav√≠t√°s sz√ºks√©ges az √ºzemzavar elker√ºl√©s√©hez!",
            "checklist_results": {
                "motor_hajtaslancz": "KRITIKUS - T√∫lmeleged√©s",
                "elektromos_rendszer": "Norm√°l", 
                "homerseklet": "78¬∞C (MAX: 65¬∞C) - T√öLL√âP√âS",
                "kenoanyag": "OK",
                "kopoalkatresz": "Ventill√°tor hib√°s",
                "kalibracio": "H≈ëszenzor elt√©r√©s"
            }
        }
    ]
    
    # 8. Ticket and Work Order
    print("8Ô∏è‚É£ Creating ticket ‚Üí work order flow...")
    demo_data['ticket'] = {
        "id": 1,
        "ticket_number": "TICKET-2024-001",
        "title": "Motor t√∫lmeleged√©s - PROD-BET-005",
        "description": "Automatikus tol√≥kapu motorj√°n√°l t√∫lmeleged√©s √©szlelhet≈ë (78¬∞C). A kapu lassabban reag√°l, id≈ënk√©nt 2-3 m√°sodpercre meg√°ll. Az ellen≈ërz√©s sor√°n kritikus hib√°t tal√°ltunk. Azonnali jav√≠t√°s sz√ºks√©ges az √ºzemzavar elker√ºl√©s√©hez.",
        "category": "electrical",
        "priority": "high",
        "status": "resolved",
        "gate_id": 5,  # B√©ta gy√°rt√≥csarnok
        "inspection_id": 2,  # Critical inspection
        "reporter_id": 3,  # Nagy Anna
        "created_at": "2024-10-04T16:20:00"
    }
    
    demo_data['work_order'] = {
        "id": 1,
        "work_order_number": "WO-2024-001",
        "title": "Motor t√∫lmeleged√©s jav√≠t√°sa - PROD-BET-005",
        "description": "Automatikus tol√≥kapu motor h≈±t≈ërendszer jav√≠t√°sa, ventill√°tor csere √©s h≈ëszenzor kalibr√°l√°s a t√∫lmeleged√©s megsz√ºntet√©s√©re.",
        "work_type": "repair",
        "work_category": "electrical_repair", 
        "priority": "high",
        "status": "completed",
        "gate_id": 5,  # B√©ta gy√°rt√≥csarnok
        "ticket_id": 1,
        "assigned_technician_id": 4,  # Moln√°r G√°bor
        "estimated_duration_hours": 4.0,
        "actual_duration_hours": 3.5,
        "scheduled_start": "2024-10-04T08:00:00",
        "actual_start": "2024-10-04T08:15:00", 
        "actual_end": "2024-10-04T11:45:00",
        "work_performed": """Elv√©gzett munk√°latok:
1. Motor h≈±t≈ëventill√°tor demont√°l√°sa √©s vizsg√°lata
2. Hib√°s ventill√°tor cser√©je (CAME-FAN-200W)
3. H≈ëm√©rs√©klet szenzor kalibr√°l√°sa √©s be√°ll√≠t√°sa 
4. H≈ëpaszta felvitel a motor-h≈±t≈ë fel√ºletekre
5. M≈±k√∂d√©si teszt v√©grehajt√°sa (30 ciklus)
6. Biztons√°gi ellen≈ërz√©s √©s dokument√°l√°s""",
        "parts_used": """Felhaszn√°lt alkatr√©szek:
- H≈±t≈ëventill√°tor (CAME-FAN-200W) - 1 db
- H≈ëm√©rs√©klet szenzor (TEMP-SENS-A1) - 1 db  
- H≈ëpaszta (THERMAL-PASTE-5G) - 1 tubus
- Csavarok √©s r√∂gz√≠t≈ëk - k√©szlet""",
        "quality_check_passed": True,
        "customer_satisfaction_rating": 5,
        "completion_notes": "Jav√≠t√°s sikeresen befejezve. Motor h≈ëm√©rs√©klet stabiliz√°l√≥dott 52¬∞C-ra. 30 ciklusos teszt hib√°tlan. K√∂vetkez≈ë ellen≈ërz√©s 3 h√≥nap m√∫lva javasolt."
    }
    
    # 9. PDF Documents Configuration
    print("9Ô∏è‚É£ Configuring PDF document templates...")
    demo_data['pdf_documents'] = {
        "inspection_report": {
            "template": "inspection_report_template.html",
            "filename": "inspection-report-MAIN-ALF-001-20241004.pdf",
            "title": "Ellen≈ërz√©si Jegyz≈ëk√∂nyv",
            "inspection_id": 1
        },
        "work_order": {
            "template": "work_order_template.html", 
            "filename": "work-order-WO-2024-001.pdf",
            "title": "Munkalap",
            "work_order_id": 1
        },
        "completion_report": {
            "template": "completion_report_template.html",
            "filename": "completion-report-WO-2024-001.pdf", 
            "title": "Befejez√©si Riport",
            "work_order_id": 1
        }
    }
    
    # 10. Generate Summary
    print("üîü Generating demo summary...")
    demo_data['summary'] = {
        "scenario_name": "GarageReg Golden Path Demo",
        "generated_at": datetime.now().isoformat(),
        "total_entities": {
            "clients": 1,
            "sites": 2, 
            "buildings": 3,
            "gates": 10,
            "users": 4,
            "inspection_templates": 2,
            "inspections": 2,
            "tickets": 1,
            "work_orders": 1,
            "pdf_documents": 3
        },
        "golden_path_steps": [
            "1. Dashboard overview",
            "2. Client management (TechPark)",
            "3. Site management (North/South Campus)", 
            "4. Building management (Alfa/Beta/Gamma)",
            "5. Gate management (10 gates)",
            "6. Inspection execution", 
            "7. Ticket creation",
            "8. Work order processing",
            "9. PDF document generation"
        ],
        "acceptance_criteria": {
            "ui_navigation": "Complete path navigable", 
            "pdf_generation": "3 documents must generate",
            "data_completeness": "All demo entities present"
        }
    }
    
    # Save to file
    output_file = Path("demo_scenario_data.json")
    with open(output_file, "w", encoding="utf-8") as f:
        json.dump(demo_data, f, indent=2, ensure_ascii=False, default=str)
        
    print(f"\n‚úÖ Demo Scenario Data Generated Successfully!")
    print(f"üìÅ Output file: {output_file.absolute()}")
    print(f"üìä Total entities: {sum(demo_data['summary']['total_entities'].values())}")
    
    return demo_data


def print_demo_summary(demo_data):
    """Print formatted summary of generated demo data."""
    
    print("\n" + "="*60)
    print("üéØ DEMO SCENARIO SUMMARY")
    print("="*60)
    
    print(f"\nüìã CLIENT: {demo_data['client']['name']}")
    print(f"   üìç Address: {demo_data['client']['address']}")
    print(f"   üìû Contact: {demo_data['client']['contact_person']}")
    
    print(f"\nüè¢ SITES ({len(demo_data['sites'])}):")
    for site in demo_data['sites']:
        print(f"   ‚Ä¢ {site['name']} - {site['address']}")
        
    print(f"\nüèóÔ∏è BUILDINGS ({len(demo_data['buildings'])}):")
    for building in demo_data['buildings']:
        print(f"   ‚Ä¢ {building['name']} - {building['description']}")
        
    print(f"\nüö™ GATES ({len(demo_data['gates'])}):")
    for i, gate in enumerate(demo_data['gates'], 1):
        print(f"   {i:2}. {gate['display_name']} ({gate['gate_type']}) - {gate['manufacturer']} {gate['model']}")
        
    print(f"\nüîç INSPECTIONS ({len(demo_data['inspections'])}):")
    for inspection in demo_data['inspections']:
        print(f"   ‚Ä¢ {inspection['title']}")
        print(f"     Result: {inspection['result']} | Inspector: {demo_data['users'][inspection['inspector_id']-1]['display_name']}")
        
    print(f"\nüé´ WORKFLOW:")
    print(f"   ‚Ä¢ Ticket: {demo_data['ticket']['ticket_number']} ({demo_data['ticket']['priority']} priority)")
    print(f"   ‚Ä¢ Work Order: {demo_data['work_order']['work_order_number']} ({demo_data['work_order']['status']})")
    print(f"   ‚Ä¢ Duration: {demo_data['work_order']['actual_duration_hours']} hours")
    
    print(f"\nüìÑ PDF DOCUMENTS:")
    for doc_type, doc_info in demo_data['pdf_documents'].items():
        print(f"   ‚Ä¢ {doc_info['title']}: {doc_info['filename']}")
        
    print(f"\nüåê UI NAVIGATION PATH:")
    nav_steps = [
        "/dashboard ‚Üí Overview",
        "/clients ‚Üí TechPark setup", 
        "/sites ‚Üí Campus management",
        "/buildings ‚Üí Building registry",
        "/gates ‚Üí Gate management", 
        "/inspection-demo ‚Üí Execute inspections",
        "/tickets ‚Üí Ticket workflow",
        "PDF Generation ‚Üí 3 documents"
    ]
    for step in nav_steps:
        print(f"   ‚Üí {step}")
        
    print(f"\n‚úÖ ACCEPTANCE CRITERIA:")
    print(f"   ‚òê Demo v√©gigj√°tszhat√≥ UI-b√≥l")
    print(f"   ‚òê 3 PDF keletkezik")  
    print(f"   ‚òê Teljes workflow m≈±k√∂dik")
    
    print("\n" + "="*60)


if __name__ == "__main__":
    demo_data = create_demo_scenario_data()
    print_demo_summary(demo_data)